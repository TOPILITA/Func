(define (CalcAndDisplayY x accuracy)
 (display "X: ")
 (display x)
 (if (<= x 0)
     (display "; ln(x) є визначеним лише для x>0!")
     (and (let ((y (TaylorLn x accuracy)))
            (if (number? y)
                (and (display "; Y: ")
                     (display y)
                     (display "; Похибка: ")
                     (display (abs (- y (MathLn x)))))
                (display y)))))
 (newline))

(define (TaylorLn x acc)
 (cond
   ((and (> x -2) (<= x 0)) (* (RecurrentSumLn (* 2 x) acc) (RecurrentSumLn x acc)))
   ((and (> x 0)  (<= x 1)) (- (RecurrentSumLn (/ x 2) acc) 1))
   (else "; Функція не визначена для даного x!")))

(define (RecurrentSumLn x acc)
 (let ((seriesSum (- x 1)))
   (CalcReccurentSum seriesSum NextReccurentLnElem (cons seriesSum 1) x acc)))

(define (NextReccurentLnElem prevElem x)
 (let ((d (cdr prevElem)))
   (let ((n (if (even? d) (abs (car prevElem)) (car prevElem))))
     (cons (* (expt -1 d) n (- x 1)) (+ d 1)))))

(define (CalcReccurentSum sum nextElem prev x acc)
 (let ((nextPair (nextElem prev x)))
   (let ((next (/ (car nextPair) (cdr nextPair))))
     (if (< acc (abs next))
       (CalcReccurentSum (+ sum next) nextElem nextPair x acc)
       (exact->inexact sum)))))

(define (MathLn x)
 (cond
   ((and (> x -2) (<= x 0)) (* (log (* 2 x)) (log x)))
   ((and (> x 0)  (<= x 1)) (- (log (/ x 2)) 1))
   (else "; Функція не визначена для даного x!")))

(define (main)
 (let ((accuracy 0.0001))
   (display "Точність: ")
   (display accuracy)
   (newline)
   (CalcAndDisplayY -2 accuracy)
   (CalcAndDisplayY -1.5 accuracy)
   (CalcAndDisplayY -1 accuracy)
   (CalcAndDisplayY -0.5 accuracy)
   (CalcAndDisplayY 0 accuracy)
   (CalcAndDisplayY 0.5 accuracy)
   (CalcAndDisplayY 1 accuracy)
   (CalcAndDisplayY 1.5 accuracy)
   (CalcAndDisplayY 2 accuracy)))

(main)